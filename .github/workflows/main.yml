name: Publish back- and frontend images

on:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  FRONTENDNEXTGEN_NAME: ${{ github.repository }}_frontend-nextgen
  ML_API_NAME: ${{ github.repository }}_ml_api
  FETCHTIME_NAME: ${{ github.repository }}_fetchtime

jobs:
  build-fetchtime:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ env.FETCHTIME_NAME }}-${{ env.REGISTRY }}
          restore-keys: |
            ${{ runner.os }}-docker-${{ env.FETCHTIME_NAME }}-${{ env.REGISTRY }}-

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.FETCHTIME_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./fetchtime/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          builder: docker-container # Set the builder to docker-container
          cache-from: type=local,src=${{ runner.home }}/.cache/docker/${{ env.FETCHTIME_NAME }}
          cache-to: type=local,dest=${{ runner.home }}/.cache/docker/${{ env.FETCHTIME_NAME }},mode=max

  build-frontend-nextgen:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ env.FRONTENDNEXTGEN_NAME }}-${{ env.REGISTRY }}
          restore-keys: |
            ${{ runner.os }}-docker-${{ env.FRONTENDNEXTGEN_NAME }}-${{ env.REGISTRY }}-

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTENDNEXTGEN_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend-nextgen/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          builder: docker-container # Set the builder to docker-container
          cache-from: type=local,src=${{ runner.home }}/.cache/docker/${{ env.FRONTENDNEXTGEN_NAME }}
          cache-to: type=local,dest=${{ runner.home }}/.cache/docker/${{ env.FRONTENDNEXTGEN_NAME }},mode=max

  build-ml-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-options: |
            image=moby/buildkit:master
            network=host

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Cache for Buildx
        id: check-cache
        uses: docker/build-push-action@v2
        with:
          context: ./ml_api/
          outputs: type=local,dest=cache
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.ML_API_NAME }}:cache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.ML_API_NAME }}:cache,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Build and Push Docker image (linux/amd64)
        uses: docker/build-push-action@v2
        with:
          context: ./ml_api/
          push: true
          file: ./ml_api/Dockerfile
          platforms: linux/amd64
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.ML_API_NAME }}:cache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.ML_API_NAME }}:cache,mode=max
          tags: |
            ${{ env.REGISTRY }}/${{ env.ML_API_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.ML_API_NAME }}:${{ github.sha }}

      - name: Build and Push Docker image (linux/arm64)
        uses: docker/build-push-action@v2
        with:
          context: ./ml_api/
          push: true
          file: ./ml_api/Dockerfile
          platforms: linux/arm64
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.ML_API_NAME }}:cache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.ML_API_NAME }}:cache,mode=max
          tags: |
            ${{ env.REGISTRY }}/${{ env.ML_API_NAME }}:arm64-latest
            ${{ env.REGISTRY }}/${{ env.ML_API_NAME }}:arm64-${{ github.sha }}
