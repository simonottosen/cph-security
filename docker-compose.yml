version: "3.3"
services:

  cph_postgres_db:
    image: postgres:latest
    container_name: "cph_postgres_db"
    environment: 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - '5432:5432'
    volumes:
      - ./database/db:/var/lib/postgresql/data
      - ./database/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    restart: unless-stopped

  cph_postgrest:
    image: postgrest/postgrest:latest
    container_name: "cph_postgrest"
    depends_on:
      - cph_postgres_db
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment: 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      PGRST_DB_URI: ${PGRST_DB_URI}
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: web_anon

  swagger-ui:
    container_name: "cph_swagger-ui"
    image: swaggerapi/swagger-ui:latest
    depends_on:
      - cph_postgres_db
    ports:
      - "8080:8080"
    environment:
      - API_URL=http://cph_postgrest:3000
    restart: unless-stopped

  cph_fetchtime:
    build: ./backend/
    container_name: "cph_fetchtime"
    user: user
    depends_on:
      - cph_postgres_db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      CPHAPI_HOST: ${CPHAPI_HOST}
      GOOGLE_APPLICATION_CREDENTIALS: /home/user/app/keyfile.json
    restart: unless-stopped
    volumes:
      - ${GCP_KEY_PATH}:/home/user/app/keyfile.json:ro
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.cph.schedule: "@every 1m"
      ofelia.job-exec.cph.command: "fetch"

  arn_fetchtime:
    build: ./stockholm/
    container_name: "arn_fetchtime"
    user: user
    depends_on:
      - cph_postgres_db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      CPHAPI_HOST: ${CPHAPI_HOST}
      GOOGLE_APPLICATION_CREDENTIALS: /home/user/app/keyfile.json
    restart: unless-stopped
    volumes:
      - ${GCP_KEY_PATH}:/home/user/app/keyfile.json:ro
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.arn.schedule: "@every 1m"
      ofelia.job-exec.arn.command: "fetch"

  osl_fetchtime:
    build: ./oslo/
    container_name: "osl_fetchtime"
    user: user
    depends_on:
      - cph_postgres_db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      CPHAPI_HOST: ${CPHAPI_HOST}
      GOOGLE_APPLICATION_CREDENTIALS: /home/user/app/keyfile.json
    restart: unless-stopped
    volumes:
      - ${GCP_KEY_PATH}:/home/user/app/keyfile.json:ro
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.osl.schedule: "@every 1m"
      ofelia.job-exec.osl.command: "fetch"


  ofelia:
    container_name: "cph_fetchtime_scheduler"
    image: mcuadros/ofelia:latest
    restart: always
    depends_on:
      - cph_fetchtime
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  cph_frontend:
    build: ./frontend
    container_name: "cph_frontend"
    volumes:
      - .:/frontend/project
    ports:
      - "8501:8501"
    depends_on:
      - cph_postgres_db
      - cph_postgrest
    environment:
      CPHAPI_HOST: ${CPHAPI_HOST}
    restart: unless-stopped


  ml_api:
    build: ./ml_api
    container_name: "ml_api"
    volumes:
      - .:/ml_api/project
    ports:
      - "5000:5000"
    depends_on:
      - cph_postgres_db
      - cph_postgrest
    environment:
      CPHAPI_HOST: ${CPHAPI_HOST}
    restart: unless-stopped